query GetGroundedValue(
  $datasetId: UUID!
  $value: String!
  $domainEntity: String
  $copilotId: UUID
) {
  getGroundedValue(
    datasetId: $datasetId
    value: $value
    domainEntity: $domainEntity
    copilotId: $copilotId
  ) {
    matchedValue
    matchQuality
    matchType
    mappedIndicator
    mappedValue
    preferred
    domainEntity
    otherMatches
  }
}

query GetDatabase(
  $databaseId: UUID!
) {
  getDatabase(
    databaseId: $databaseId
  ) {
    databaseId
    name
    dbms
    description
    llmDescription
    mermaidErDiagram
    kShotLimit
  }
}

query GetDatabases($searchInput: DatabaseSearchInput!, $paging: PagingInput!) {
  getDatabases(searchInput: $searchInput, paging: $paging) {
    totalRows
    rows {
      databaseId
      name
      dbms
      description
      llmDescription
      mermaidErDiagram
      kShotLimit
    }
  }
}

query GetDatabaseTables($databaseId: UUID!, $searchInput: DatabaseTableSearchInput!, $paging: PagingInput!) {
  getDatabaseTables(databaseId: $databaseId, searchInput: $searchInput, paging: $paging) {
    totalRows
    rows {
      tableName
    }
  }
}

query GetDatabaseKShots($databaseId: UUID!, $searchInput: DatabaseKShotSearchInput!, $paging: PagingInput!) {
  getDatabaseKShots(databaseId: $databaseId, searchInput: $searchInput, paging: $paging) {
    totalRows
    rows {
      databaseKShotId
      question
      renderedPrompt
      explanation
      sql
      title
      visualization
      isActive
    }
  }
}

query GetDatabaseKShotById($databaseKShotId: UUID!) {
  getDatabaseKShotById(databaseKShotId: $databaseKShotId) {
    databaseKShotId
    question
    renderedPrompt
    explanation
    sql
    title
    visualization
    isActive
  }
}

query GetDataset2(
  $datasetId: UUID!
) {
  getDataset2(
    datasetId: $datasetId
  ) {
    datasetId
    name
    description
    databaseId
    dimensions
    metrics
    miscInfo
    sourceTable
    sourceSql
    dataInterval
    datasetMinDate
    datasetMaxDate
    queryRowLimit
    useDatabaseCasing
    kShotLimit
  }
}

query GetDatasets($searchInput: DatasetSearchInput!, $paging: PagingInput!) {
  getDatasets(searchInput: $searchInput, paging: $paging) {
    totalRows
    rows {
      datasetId
      databaseId
      name
      description
    }
  }
}

mutation UpdateDatabaseName(
  $databaseId: UUID!
  $name: String!
) {
  updateDatabaseName(
    databaseId: $databaseId
    name: $name
  ) {
    success
    code
    error
  }
}

mutation UpdateDatabaseDescription(
  $databaseId: UUID!
  $description: String
) {
  updateDatabaseDescription(
    databaseId: $databaseId
    description: $description
  ) {
    success
    code
    error
  }
}

mutation UpdateDatabaseLlmDescription(
  $databaseId: UUID!
  $llmDescription: String
) {
  updateDatabaseLlmDescription(
    databaseId: $databaseId
    llmDescription: $llmDescription
  ) {
    success
    code
    error
  }
}

mutation UpdateDatabaseMermaidErDiagram(
  $databaseId: UUID!
  $mermaidErDiagram: String
) {
  updateDatabaseMermaidErDiagram(
    databaseId: $databaseId
    mermaidErDiagram: $mermaidErDiagram
  ) {
    success
    code
    error
  }
}

mutation UpdateDatabaseKShotLimit(
  $databaseId: UUID!
  $kShotLimit: Int!
) {
  updateDatabaseKShotLimit(
    databaseId: $databaseId
    kShotLimit: $kShotLimit
  ) {
    success
    code
    error
  }
}

mutation CreateDataset(
  $dataset: JSON!
) {
  createDataset(
    dataset: $dataset
  ) {
    success
    code
    error
  }
}

mutation CreateDatasetFromTable(
  $databaseId: UUID!
  $tableName: String!
) {
  createDatasetFromTable(
    databaseId: $databaseId
    tableName: $tableName
  ) {
    datasetId
    queuedTaskGuid
    error
  }
}

mutation UpdateDatasetName(
  $datasetId: UUID!
  $name: String!
) {
  updateDatasetName(
    datasetId: $datasetId
    name: $name
  ) {
    success
    code
    error
  }
}

mutation UpdateDatasetDescription(
  $datasetId: UUID!
  $description: String
) {
  updateDatasetDescription(
    datasetId: $datasetId
    description: $description
  ) {
    success
    code
    error
  }
}

mutation UpdateDatasetDateRange(
  $datasetId: UUID!
  $datasetMinDate: DateTime
  $datasetMaxDate: DateTime
) {
  updateDatasetDateRange(
    datasetId: $datasetId
    datasetMinDate: $datasetMinDate
    datasetMaxDate: $datasetMaxDate
  ) {
    success
    code
    error
  }
}

mutation UpdateDatasetDataInterval(
  $datasetId: UUID!
  $dataInterval: DatasetDataInterval
) {
  updateDatasetDataInterval(
    datasetId: $datasetId
    dataInterval: $dataInterval
  ) {
    success
    code
    error
  }
}

mutation UpdateDatasetMiscInfo(
  $datasetId: UUID!
  $miscInfo: String
) {
  updateDatasetMiscInfo(
    datasetId: $datasetId
    miscInfo: $miscInfo
  ) {
    success
    code
    error
  }
}

mutation UpdateDatasetSource(
  $datasetId: UUID!
  $sourceTable: String!
  $sourceSql: String
  $derivedTableAlias: String
) {
  updateDatasetSource(
    datasetId: $datasetId
    sourceTable: $sourceTable
    sourceSql: $sourceSql
    derivedTableAlias: $derivedTableAlias
  ) {
    success
    code
    error
  }
}

mutation UpdateDatasetQueryRowLimit(
  $datasetId: UUID!
  $queryRowLimit: Int
) {
  updateDatasetQueryRowLimit(
    datasetId: $datasetId
    queryRowLimit: $queryRowLimit
  ) {
    success
    code
    error
  }
}

mutation UpdateDatasetUseDatabaseCasing(
  $datasetId: UUID!
  $useDatabaseCasing: Boolean!
) {
  updateDatasetUseDatabaseCasing(
    datasetId: $datasetId
    useDatabaseCasing: $useDatabaseCasing
  ) {
    success
    code
    error
  }
}

mutation UpdateDatasetKShotLimit(
  $datasetId: UUID!
  $kShotLimit: Int!
) {
  updateDatasetKShotLimit(
    datasetId: $datasetId
    kShotLimit: $kShotLimit
  ) {
    success
    code
    error
  }
}

mutation CreateDimension(
  $datasetId: UUID!
  $dimension: JSON!
) {
  createDimension(
    datasetId: $datasetId
    dimension: $dimension
  ) {
    success
    code
    error
  }
}

mutation UpdateDimension(
  $datasetId: UUID!
  $dimension: JSON!
) {
  updateDimension(
    datasetId: $datasetId
    dimension: $dimension
  ) {
    success
    code
    error
  }
}

mutation DeleteDimension(
  $datasetId: UUID!
  $dimensionId: String!
) {
  deleteDimension(
    datasetId: $datasetId
    dimensionId: $dimensionId
  ) {
    success
    code
    error
  }
}

mutation CreateMetric(
  $datasetId: UUID!
  $metric: JSON!
) {
  createMetric(
    datasetId: $datasetId
    metric: $metric
  ) {
    success
    code
    error
  }
}

mutation UpdateMetric(
  $datasetId: UUID!
  $metric: JSON!
) {
  updateMetric(
    datasetId: $datasetId
    metric: $metric
  ) {
    success
    code
    error
  }
}

mutation DeleteMetric(
  $datasetId: UUID!
  $metricId: String!
) {
  deleteMetric(
    datasetId: $datasetId
    metricId: $metricId
  ) {
    success
    code
    error
  }
}

mutation CreateDatabaseKShot(
  $databaseKShot: JSON!
) {
  createDatabaseKShot(
    databaseKShot: $databaseKShot
  ) {
    databaseKShotId
    success
    code
    error
  }
}

mutation UpdateDatabaseKShot(
  $databaseKShot: JSON!
) {
  updateDatabaseKShot(
    databaseKShot: $databaseKShot
  ) {
    success
    code
    error
  }
}

mutation DeleteDatabaseKShot(
  $databaseKShotId: UUID!
) {
  deleteDatabaseKShot(
    databaseKShotId: $databaseKShotId
  ) {
    success
    code
    error
  }
}
