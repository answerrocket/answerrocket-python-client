query GetCopilotSkill($copilotId: UUID!, $copilotSkillId: UUID!, $usePublishedVersion: Boolean) {
    getCopilotSkill(copilotId: $copilotId, copilotSkillId: $copilotSkillId, usePublishedVersion: $usePublishedVersion) {
        copilotSkillId
        name
        copilotSkillType
        detailedName
        description
        detailedDescription
        datasetId
        skillChatQuestions {
            copilotSkillChatQuestionId
            question
            expectedCompletionResponse
        }
        yamlCode
        skillCode
        miscInfo
        schedulingOnly
        copilotSkillNodes {
            copilotSkillNodeId
            skillComponentId
            name
            description
            userData
            nodeConnections {
                inputProperty
                sourceNodeId
                outputProperty
            }
        }
        parameters {
            copilotSkillParameterId
            name
            copilotParameterType
            parameterSourceKey
            isMulti
            metadataField
            llmDescription
            constrainedValues
            value
            description
            isActive
            createdUserId
            createdUtc
            lastModifiedUserId
            lastModifiedUtc
            version
        }
        capabilities
        limitations
        exampleQuestions
        parameterGuidance
    }
}

query GetCopilotInfo($copilotId: UUID!, $usePublishedVersion: Boolean) {
    getCopilotInfo(copilotId: $copilotId, usePublishedVersion: $usePublishedVersion) {
        copilotId
        name
        description
        landingPage
        systemPrompt
        betaYaml
        globalPythonCode
        copilotQuestions
        connectionDatasets
        copilotSkillIds
        copilotTopics
    }
}

query GetCopilots {
    getCopilots {
        copilotId
        name
        description
        landingPage
        systemPrompt
        betaYaml
        globalPythonCode
        copilotQuestions {
            copilotQuestionId
            nl
            skillId
            parameters
            isStarter
            hint
            createdUserId
            createdUtc
            lastModifiedUserId
            lastModifiedUtc
            version
            isDeleted
        }
        connectionDatasets {
            datasetId
            name
        }
        copilotSkillIds
        copilotTopics {
            copilotTopicId
            name
            description
            researchOutline
            presentationOutline
            createdUserId
            createdUserName
            createdUtc
            lastModifiedUserId
            lastModifiedUserName
            lastModifiedUtc
            isActive
        }
        databaseId
        datasetId
    }
}
query GetCopilotHydratedReports($copilotId: UUID!, $overrideDatasetId: UUID, $loadAllSkills: Boolean) {
    getCopilotHydratedReports(copilotId: $copilotId, overrideDatasetId: $overrideDatasetId, loadAllSkills: $loadAllSkills) {
        copilotId
        copilotSkillId
        datasetId
        datasetIds
        detailedDescription
        key
        name
        packageName
        parameters {
            constrainedValues
            definition {
                constraints
                key
                multi
                type
            }
            description
            isHidden
            isMulti
            isRequired
            key
            llmDescription
            metadataField
            skillParamDefKey
            usePredicateFilters
            value
            defaultValue
            additionalConstraints
            datasetNames
            meta
            matchValues {
                automaticDbWhitelist
                constrainedValues
                datasetId
                defaultPerformanceMetric
                inverseMap
                phraseTemplate
                popularValues
                valueCollectionName
                datasetDateDimensions
                datasetDimensions
                datasetMetrics
                predicateVocab
            }
        }
        schedulingOnly
        toolDescription
        toolName
        toolType
        type
        usePredicateFilters
        meta
    }
}

mutation ClearCopilotCache($copilotId: UUID!) {
    clearCopilotCache(copilotId: $copilotId) {
        success
        error
    }
}

query GetCopilotTestRun($copilotId: UUID!, $copilotTestRunId: UUID!) {
    getCopilotTestRun(copilotId: $copilotId, copilotTestRunId: $copilotTestRunId) {
        copilotTestRunId
        name
        initiatedBy
        testRunIterations {
            copilotTestRunIterationId
            threadId
            entryId
            copilotQuestionId
            name
            isLoading
            evaluationResult
            skillEvaluationResults {
                skillEvaluationResultId
                skillEvaluationId
                copilotSkillId
                result
                message
                html
            }
            skillFailed
            startUtc
            endUtc
        }
        totalIterations
        isLoading
        isCanceled
        dryRunType
        passRate
        totalCost
        startUtc
        endUtc
        createdUserId
        createdUserName
        modelOverrides {
            modelType
            modelName
        }
    }
}

query GetPagedCopilotTestRuns($copilotId: UUID!, $pageNumber: Int!, $pageSize: Int!) {
    getPagedCopilotTestRuns(copilotId: $copilotId, pageNumber: $pageNumber, pageSize: $pageSize) {
        rowCount
        testRuns {
            copilotTestRunId
            name
            initiatedBy
            testRunIterations {
                copilotTestRunIterationId
                threadId
                entryId
                copilotQuestionId
                name
                isLoading
                evaluationResult
                skillEvaluationResults {
                    skillEvaluationResultId
                    skillEvaluationId
                    copilotSkillId
                    result
                    message
                    html
                }
                skillFailed
                startUtc
                endUtc
            }
            totalIterations
            isLoading
            isCanceled
            dryRunType
            passRate
            totalCost
            startUtc
            endUtc
            createdUserId
            createdUserName
            modelOverrides {
                modelType
                modelName
            }
        }
    }
}

query GetCopilotQuestionFolders($copilotId: UUID!) {
    getCopilotQuestionFolders(copilotId: $copilotId) {
        copilotQuestionFolderId
        name
        copilotQuestions {
            copilotQuestionId
            nl
        }
    }
}

mutation CreateCopilotTestRun($copilotId: UUID!, $questionIds: [UUID!]!, $modelOverrides: [ModelOverride!], $dryRunType: ChatDryRunType, $name: String) {
    createCopilotTestRun(copilotId: $copilotId, questionIds: $questionIds, modelOverrides: $modelOverrides, dryRunType: $dryRunType, name: $name) {
        copilotTestRunId
        code
        success
        errors
    }
}

mutation RunCopilotTestRun($questionIds: [UUID!]!, $testRunId: UUID!, $promptMap: JSON!, $overrideUserId: UUID) {
    runCopilotTestRun(questionIds: $questionIds, testRunId: $testRunId, promptMap: $promptMap, overrideUserId: $overrideUserId) {
        copilotTestRunId
        code
        success
        errors
    }
}

mutation CancelCopilotTestRun($copilotId: UUID!, $copilotTestRunId: UUID!) {
    cancelCopilotTestRun(copilotId: $copilotId, copilotTestRunId: $copilotTestRunId) {
        success
        error
    }
}
